#创建进程的用户和用户组，多个时用空格隔开
#user  nobody;
#服务进程数量，一般等于 CPU 数量
worker_processes  1;

#全局错误日志定义，建议开启error级别日志.[ debug | info | notice | warn | error | crit ]
error_log  /var/log/nginx/error.log debug;

#记录进程 ID 的文件
pid        /var/log/nginx/nginx.pid;

events {
	# 一个 worker_processe 允许的最大并发连接数量
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;

     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    #http连接的持续时间
    keepalive_timeout  65;

	#gzip压缩设置，开启或关闭
    #gzip  on;

	#设定负载均衡的服务器列表，可以设置多个 upstream，使用不同的名称  区分即可
	#upstream 默认是没有，需要自己添加
	upstream tx {
        #weigth参数表示权值，权值越高被分配到的几率越大
        server 124.221.93.112:80 weight=1;
    }

	upstream tx-grade {
	    #weigth参数表示权值，权值越高被分配到的几率越大
	    server 124.221.93.112:8010 weight=1;
	}

	upstream tx-eureka {
        #weigth参数表示权值，权值越高被分配到的几率越大
        server 124.221.93.112:8761 weight=1;
    }

    upstream tx-sonar {
            #weigth参数表示权值，权值越高被分配到的几率越大
            server 124.221.93.112:9001 weight=1;
        }

    server {
    	#nginx监听的端口号
        listen       80;
        #当前 server（虚拟主机）的域名，可以有多个，用空格隔开
        server_name  www.qyaml.cn;
        #字符编码方式
        charset utf-8;

        #设定本虚拟主机的访问日志。关闭日志可以减少IO，提高性能。
        access_log  /var/log/nginx/host.access.log;

        #默认请求
        location / {
            #定义服务器的默认网站根目录位置
            root   html;
            #定义首页索引文件的名称
            index  index.html index.htm;

            #请求转向  定义的服务器列表
            proxy_pass http://tx;
        }

        location = /eureka {
            proxy_pass http://tx-eureka;
            proxy_redirect off;
            proxy_set_header  Host  $host;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_connect_timeout 60;
            proxy_read_timeout    600;
            send_timeout          600;

            rewrite "^/eureka/(.*)$" /$1 break;
        }

        location /grade {
            proxy_pass http://tx-grade;
            proxy_redirect off;
            proxy_set_header  Host  $host;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_connect_timeout 60;
            proxy_read_timeout    600;
            send_timeout          600;

            rewrite "^/grade/(.*)$" /$1 break;

        }

        error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root  html;
        }
    }

    server {
            #nginx监听的端口号
            listen       80;
            #当前 server（虚拟主机）的域名，可以有多个，用空格隔开
            server_name  sonar.qyaml.cn;
            #字符编码方式
            charset utf-8;

            #设定本虚拟主机的访问日志。关闭日志可以减少IO，提高性能。
            access_log  /var/log/nginx/host.access.log;

            #默认请求
            location / {
                #请求转向  定义的服务器列表
                proxy_pass http://tx-sonar;
            }
        }

    # HTTPS server
    server {
           listen       443 ssl;
           server_tokens off;
           keepalive_timeout 5;
           server_name  sonar.qyaml.cn;

           ssl_certificate      qyaml.cn.pem;
           ssl_certificate_key  qyaml.cn.key;

           ssl_session_cache    shared:SSL:1m;
           ssl_session_timeout  5m;

           ssl_ciphers  HIGH:!aNULL:!MD5;
           ssl_prefer_server_ciphers  on;

           access_log /var/log/nginx/wordpress.log;
           error_log /var/log/nginx/wordpress.error.log;

           location / {
                proxy_pass http://tx-sonar;
           }
        }

}